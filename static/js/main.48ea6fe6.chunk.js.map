{"version":3,"sources":["components/SearchBar/index.ts","components/SearchBar/SearchBar.tsx","components/Carousel/index.ts","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["SearchBar","onChange","className","type","placeholder","Carousel","data","useState","currentIndex","setCurrentIndex","carouselRef","useRef","containerRef","navigate","useCallback","direction","length","scrollIndex","current","children","scrollIntoView","behavior","inline","navigateToSlide","e","element","target","index","dataset","parseInt","resetPosition","navigatePrevious","navigateNext","useEffect","container","observer","window","IntersectionObserver","entry","intersectionRect","isIntersecting","left","elementIndex","root","threshold","Array","from","forEach","node","observe","unobserve","ref","aria-label","data-testid","map","bodyType","id","imageUrl","modelName","modelType","data-index","role","src","alt","href","onClick","App","setData","originalData","fetchData","a","fetch","response","json","filterData","value","filteredData","filter","toLowerCase","smoothscroll","polyfill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ea6fe6.chunk.js","sourcesContent":["import SearchBar from './SearchBar';\n\nexport default SearchBar;\n","import React from 'react';\nimport { SearchBarProps } from './types';\nimport './SearchBar.css';\n\nconst SearchBar = ({ onChange }: SearchBarProps) => (\n  <div className=\"search-bar\">\n    <div className=\"search-bar__label\">Filter body type: </div>\n    <input\n      type=\"search\"\n      className=\"search-bar__input\"\n      onChange={onChange}\n      placeholder=\"e.g. sedan\"\n    />\n  </div>\n);\n\nexport default SearchBar;\n","import Carousel from './Carousel';\n\nexport default Carousel;","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  SyntheticEvent,\n} from 'react';\nimport { CarouselProps } from './types';\nimport './Carousel.css';\n\nconst VISIBLE_SLIDES_DESKTOP = 4;\n\nconst Carousel = ({ data }: CarouselProps) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const navigate = useCallback(\n    (direction: 'previous' | 'next') => {\n      if (data.length <= VISIBLE_SLIDES_DESKTOP) {\n        return;\n      }\n\n      let scrollIndex = currentIndex;\n\n      if (direction === 'previous' && currentIndex > 0) {\n        scrollIndex = currentIndex - 1;\n      } else if (\n        direction === 'next' &&\n        currentIndex < data.length - VISIBLE_SLIDES_DESKTOP\n      ) {\n        scrollIndex = currentIndex + 1;\n      }\n\n      if (containerRef.current) {\n        containerRef.current.children[scrollIndex].scrollIntoView({\n          behavior: 'smooth',\n          inline: 'start',\n        });\n      }\n    },\n    [currentIndex, data]\n  );\n\n  const navigateToSlide = useCallback(\n    (e: SyntheticEvent) => {\n      const element = e.target as HTMLElement;\n      const index = element.dataset.index\n        ? parseInt(element.dataset.index, 10)\n        : 0;\n\n      if (containerRef.current) {\n        containerRef.current.children[index].scrollIntoView({\n          behavior: 'smooth',\n          inline: 'start',\n        });\n      }\n    },\n    [containerRef]\n  );\n\n  const resetPosition = useCallback(() => {\n    if (containerRef.current && containerRef.current.children.length > 0) {\n      containerRef.current.children[0].scrollIntoView({\n        behavior: 'smooth',\n        inline: 'start',\n      });\n    }\n  }, [containerRef]);\n\n  const navigatePrevious = useCallback(() => navigate('previous'), [navigate]);\n  const navigateNext = useCallback(() => navigate('next'), [navigate]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        const { intersectionRect, target, isIntersecting } = entry;\n\n        if (intersectionRect.left === 0) {\n          const element = target as HTMLElement;\n\n          if (element.dataset.index) {\n            const elementIndex = parseInt(element.dataset.index, 10);\n            const index = isIntersecting ? elementIndex : elementIndex + 1;\n\n            setCurrentIndex(index);\n          }\n        }\n      },\n      {\n        root: container,\n        threshold: 0.5,\n      }\n    );\n\n    if (container) {\n      Array.from(container.children).forEach((node) => {\n        observer.observe(node);\n      });\n    }\n\n    resetPosition();\n\n    return () => {\n      if (container) {\n        Array.from(container.children).forEach((node) => {\n          observer.unobserve(node);\n        });\n      }\n    };\n  }, [data, resetPosition]);\n\n  return (\n    <section\n      className=\"carousel\"\n      ref={carouselRef}\n      aria-label=\"product carousel\"\n    >\n      <p className=\"sr\">\n        Carousel showing the latest Volvo Recharge cars. Use the previous and\n        next buttons to navigate through the slides or tap the indicator dots to\n        go to a specific slide.\n      </p>\n      <div\n        className=\"carousel__container\"\n        ref={containerRef}\n        data-testid=\"container\"\n      >\n        {data.map(({ bodyType, id, imageUrl, modelName, modelType }, index) => (\n          <div\n            className=\"carousel__slide\"\n            key={id}\n            data-index={index}\n            role=\"group\"\n            aria-label={`slide ${index + 1} of ${data.length}`}\n          >\n            <article className=\"carousel__slide-content\">\n              <div className=\"carousel__slide-body-type\">{bodyType}</div>\n              <div className=\"carousel__slide-model-name\">{modelName}</div>\n              <div className=\"carousel__slide-model-type\">{modelType}</div>\n              <img\n                src={`/vfe-test/${imageUrl}`}\n                alt={`${modelName} ${modelType}`}\n                className=\"carousel__slide-image\"\n              />\n              <div className=\"carousel__slide-links\">\n                <a href={`/learn/${id}`} className=\"carousel__slide-link\">\n                  Learn\n                </a>\n                <a href={`/shop/${id}`} className=\"carousel__slide-link\">\n                  Shop\n                </a>\n              </div>\n            </article>\n          </div>\n        ))}\n      </div>\n      <div className=\"carousel__indicators\">\n        {data.map(({ id }, index) => (\n          <div\n            key={`nav${id}`}\n            className={`carousel__indicator-item${\n              index === currentIndex\n                ? ' carousel__indicator-item__selected'\n                : ''\n            }`}\n            data-index={index}\n            onClick={navigateToSlide}\n            {...(index === currentIndex ? { 'aria-current': true } : {})}\n          >\n            <span className=\"sr\">go to slide {index + 1}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"carousel__navigation\">\n        <div className=\"carousel__navigation-item\">\n          <button\n            className=\"carousel__navigation-button carousel__navigation-button__previous\"\n            onClick={navigatePrevious}\n            data-testid=\"button-previous\"\n          >\n            <span className=\"sr\">Previous Slide</span>\n          </button>\n        </div>\n        <div className=\"carousel__navigation-item\">\n          <button\n            className=\"carousel__navigation-button carousel__navigation-button__next\"\n            onClick={navigateNext}\n            data-testid=\"button-next\"\n          >\n            <span className=\"sr\">Next Slide</span>\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Carousel;\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  SyntheticEvent,\n} from 'react';\nimport SearchBar from './components/SearchBar';\nimport Carousel from './components/Carousel';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const originalData = useRef(data);\n\n  const fetchData = useCallback(async () => {\n    const response = await fetch('/vfe-test/api/cars.json');\n    const json = await response.json();\n    originalData.current = json;\n\n    setData(json);\n  }, [setData]);\n\n  const filterData = useCallback(\n    (e: SyntheticEvent) => {\n      const target = e.target as HTMLInputElement;\n      const value = target.value;\n      const filteredData = data.filter(\n        ({ bodyType }: { bodyType: string }) =>\n          bodyType.toLowerCase() === value.toLowerCase()\n      );\n\n      if (filteredData.length > 0) {\n        setData(filteredData);\n      } else {\n        setData(originalData.current);\n      }\n    },\n    [data, setData]\n  );\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <div className=\"App\">\n      <SearchBar onChange={filterData} />\n      <Carousel data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import smoothscroll from 'smoothscroll-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nsmoothscroll.polyfill();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}